# Configuration file for running in Docker container
debug=false
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=${CDOC2_CONF_DIR}/keys/cdoc2server.p12
# The password used to generate the certificate
server.ssl.key-store-password=passwd
# The alias mapped to the certificate
server.ssl.key-alias=cdoc2-server

# Mutual TLS/SSL
server.ssl.client-auth=need

# Enable client authentication certificate revocation checking for mutual TLS over OCSP
# For Est-ID (sk issued) certificates requires connection to http://aia.sk.ee
cdoc2.ssl.client-auth.revocation-checks.enabled=false

# trust store, must include CA cert that was used to sign client certificate
server.ssl.trust-store=${CDOC2_CONF_DIR}/keys/servertruststore.jks
server.ssl.trust-store-password=passwd

server.ssl.enabled=true
# enable TLSv1.3 only
server.ssl.enabled-protocols=TLSv1.3
server.port=8444

# change to 'debug' if you want to see logs. Run server with -Dlogging.config=target/test-classes/logback.xml
logging.level.root=info
logging.level.ee.cyber.cdoc2=info

spring.datasource.url=${CDOC2_DB_URL}
spring.datasource.username=${CDOC2_DB_USERNAME}
spring.datasource.password=${CDOC2_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.monitoring
# run management on separate https port
management.server.port=18444
management.server.ssl.enabled=true
management.server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
# See copy-keys-and-certificates in pom.xml
management.server.ssl.key-store=${CDOC2_CONF_DIR}/keys/cdoc2server.p12
# The password used to generate the certificate
management.server.ssl.key-store-password=passwd
# The alias mapped to the certificate
management.server.ssl.key-alias=cdoc2-server
# credentials for /actuator/prometheus api basic authentication
management.endpoints.metrics.username=${CDOC2_ACTUATOR_USERNAME}
management.endpoints.metrics.password=${CDOC2_ACTUATOR_PASSWORD}


# configure monitoring endpoints
management.endpoints.enabled-by-default=false
management.endpoints.web.discovery.enabled=false
# key values can be hidden when change value to "never" or "when_authorized"
management.endpoint.env.show-values=always
management.endpoint.configprops.show-values=always

# explicitly enable endpoints
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.startup.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
# enabling env endpoint will expose DB password
#management.endpoint.env.enabled=true

# expose endpoints
management.endpoints.web.exposure.include=info,health,startup,prometheus

# Supported metrics
# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.metrics.supported

#enable tomcat.* metrics
server.tomcat.mbeanregistry.enabled=true

# Spring Data Repository Metrics
# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.metrics.supported.spring-data-repository
# spring.data.repository.* metrics
management.metrics.data.repository.autotime.enabled=true

# https://docs.spring.io/spring-boot/docs/2.1.5.RELEASE/reference/htmlsingle/#production-ready-metrics-spring-mvc
# http.server.requests metrics
management.metrics.web.server.auto-time-requests=true

# Enable percentiles in metrics
# https://docs.spring.io/spring-boot/reference/actuator/metrics.html#actuator.metrics.customizing.per-meter-properties
#management.metrics.distribution.percentiles-histogram=true
#management.metrics.distribution.percentiles=0.75, 0.95, 0.99

#https://github.com/spring-projects/spring-boot/issues/41880
management.metrics.distribution.percentiles-histogram.http.server.requests=true


# access security must be implemented at network access rules (firewall)
management.security.enabled=false
endpoints.health.sensitive=false


# Key capsule expiration duration configuration in format P(n)DT(n)H(n)M(n)S
key-capsule.default-expiration-duration=P1095D
key-capsule.max-expiration-duration=P1825D
# Expired capsules removing job executes every 5 minutes every day
key-capsule.expired.clean-up.cron=0 0/5 * * * ?

